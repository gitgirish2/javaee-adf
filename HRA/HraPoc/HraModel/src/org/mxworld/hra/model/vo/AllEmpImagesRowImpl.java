package org.mxworld.hra.model.vo;

import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.AttributeDefImpl;

import org.mxworld.hra.common.framework.HraEntityImpl;
import org.mxworld.hra.common.framework.HraViewRowImpl;
import org.mxworld.hra.model.eo.ImageUsagesImpl;
import org.mxworld.hra.model.eo.ImagesImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 27 21:13:35 EDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AllEmpImagesRowImpl extends HraViewRowImpl {
    public static final int ENTITY_EMPIMAGEUSAGES = 0;
    public static final int ENTITY_IMAGES = 1;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AssociatedId,
        DefaultImage,
        ImageId,
        UsageType,
        Image,
        ImageId1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ASSOCIATEDID = AttributesEnum.AssociatedId.index();
    public static final int DEFAULTIMAGE = AttributesEnum.DefaultImage.index();
    public static final int IMAGEID = AttributesEnum.ImageId.index();
    public static final int USAGETYPE = AttributesEnum.UsageType.index();
    public static final int IMAGE = AttributesEnum.Image.index();
    public static final int IMAGEID1 = AttributesEnum.ImageId1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AllEmpImagesRowImpl() {
    }

    /**
     * Gets EmpImageUsages entity object.
     * @return the EmpImageUsages
     */
    public ImageUsagesImpl getEmpImageUsages() {
        return (ImageUsagesImpl) getEntity(ENTITY_EMPIMAGEUSAGES);
    }

    /**
     * Gets Images entity object.
     * @return the Images
     */
    public ImagesImpl getImages() {
        return (ImagesImpl) getEntity(ENTITY_IMAGES);
    }

    /**
     * Gets the attribute value for ASSOCIATED_ID using the alias name AssociatedId.
     * @return the ASSOCIATED_ID
     */
    public Integer getAssociatedId() {
        return (Integer) getAttributeInternal(ASSOCIATEDID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSOCIATED_ID using the alias name AssociatedId.
     * @param value value to set the ASSOCIATED_ID
     */
    public void setAssociatedId(Integer value) {
        setAttributeInternal(ASSOCIATEDID, value);
    }

    /**
     * Gets the attribute value for DEFAULT_IMAGE using the alias name DefaultImage.
     * @return the DEFAULT_IMAGE
     */
    public String getDefaultImage() {
        return (String) getAttributeInternal(DEFAULTIMAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEFAULT_IMAGE using the alias name DefaultImage.
     * @param value value to set the DEFAULT_IMAGE
     */
    public void setDefaultImage(String value) {
        setAttributeInternal(DEFAULTIMAGE, value);
    }

    /**
     * Gets the attribute value for IMAGE_ID using the alias name ImageId.
     * @return the IMAGE_ID
     */
    public Integer getImageId() {
        return (Integer) getAttributeInternal(IMAGEID);
    }

    /**
     * Sets <code>value</code> as attribute value for IMAGE_ID using the alias name ImageId.
     * @param value value to set the IMAGE_ID
     */
    public void setImageId(Integer value) {
        setAttributeInternal(IMAGEID, value);
    }

    /**
     * Gets the attribute value for USAGE_TYPE using the alias name UsageType.
     * @return the USAGE_TYPE
     */
    public String getUsageType() {
        return (String) getAttributeInternal(USAGETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for USAGE_TYPE using the alias name UsageType.
     * @param value value to set the USAGE_TYPE
     */
    public void setUsageType(String value) {
        setAttributeInternal(USAGETYPE, value);
    }

    /**
     * Gets the attribute value for IMAGE using the alias name Image.
     * @return the IMAGE
     */
    public String getImage() {
        return (String) getAttributeInternal(IMAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for IMAGE using the alias name Image.
     * @param value value to set the IMAGE
     */
    public void setImage(String value) {
        setAttributeInternal(IMAGE, value);
    }

    /**
     * Gets the attribute value for IMAGE_ID using the alias name ImageId1.
     * @return the IMAGE_ID
     */
    public DBSequence getImageId1() {
        return (DBSequence) getAttributeInternal(IMAGEID1);
    }

    /**
     * Sets <code>value</code> as attribute value for IMAGE_ID using the alias name ImageId1.
     * @param value value to set the IMAGE_ID
     */
    public void setImageId1(DBSequence value) {
        setAttributeInternal(IMAGEID1, value);
    }
}

