package org.mxworld.hra.model.eo;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;

import oracle.jbo.server.TransactionEvent;

import org.mxworld.hra.common.framework.HraEntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 27 21:53:19 EDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ImageUsagesImpl extends HraEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ImageId,
        UsageType,
        AssociatedId,
        DefaultImage,
        Images;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int IMAGEID = AttributesEnum.ImageId.index();
    public static final int USAGETYPE = AttributesEnum.UsageType.index();
    public static final int ASSOCIATEDID = AttributesEnum.AssociatedId.index();
    public static final int DEFAULTIMAGE = AttributesEnum.DefaultImage.index();
    public static final int IMAGES = AttributesEnum.Images.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ImageUsagesImpl() {
    }

    @Override
    public void postChanges(TransactionEvent transactionEvent) {
        ImagesImpl image = getImages();
        if (STATUS_NEW == image.getPostState()) {
            image.postChanges(transactionEvent);
        }
        super.postChanges(transactionEvent);
    }

    /**
     * Gets the attribute value for ImageId, using the alias name ImageId.
     * @return the value of ImageId
     */
    public Integer getImageId() {
        return (Integer) getAttributeInternal(IMAGEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImageId.
     * @param value value to set the ImageId
     */
    public void setImageId(Integer value) {
        setAttributeInternal(IMAGEID, value);
    }

    /**
     * Gets the attribute value for UsageType, using the alias name UsageType.
     * @return the value of UsageType
     */
    public String getUsageType() {
        return (String) getAttributeInternal(USAGETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsageType.
     * @param value value to set the UsageType
     */
    public void setUsageType(String value) {
        setAttributeInternal(USAGETYPE, value);
    }

    /**
     * Gets the attribute value for AssociatedId, using the alias name AssociatedId.
     * @return the value of AssociatedId
     */
    public Integer getAssociatedId() {
        return (Integer) getAttributeInternal(ASSOCIATEDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssociatedId.
     * @param value value to set the AssociatedId
     */
    public void setAssociatedId(Integer value) {
        setAttributeInternal(ASSOCIATEDID, value);
    }

    /**
     * Gets the attribute value for DefaultImage, using the alias name DefaultImage.
     * @return the value of DefaultImage
     */
    public String getDefaultImage() {
        return (String) getAttributeInternal(DEFAULTIMAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DefaultImage.
     * @param value value to set the DefaultImage
     */
    public void setDefaultImage(String value) {
        setAttributeInternal(DEFAULTIMAGE, value);
    }

    /**
     * @return the associated entity ImagesImpl.
     */
    public ImagesImpl getImages() {
        return (ImagesImpl) getAttributeInternal(IMAGES);
    }

    /**
     * Sets <code>value</code> as the associated entity ImagesImpl.
     */
    public void setImages(ImagesImpl value) {
        setAttributeInternal(IMAGES, value);
    }

    /**
     * @param imageId key constituent
     * @param usageType key constituent
     * @param associatedId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer imageId, String usageType, Integer associatedId) {
        return new Key(new Object[] { imageId, usageType, associatedId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("org.mxworld.hra.model.eo.ImageUsages");
    }
}

